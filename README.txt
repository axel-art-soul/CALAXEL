Simulaci칩n y Modelaci칩n: Generador y Pruebas de N칰meros Pseudoaleatorios
Este proyecto es una aplicaci칩n de escritorio desarrollada en Python con CustomTkinter para la interfaz gr치fica. Su prop칩sito es generar secuencias de n칰meros pseudoaleatorios usando diferentes algoritmos y someterlos a pruebas estad칤sticas para validar su calidad. La herramienta permite visualizar tanto los resultados num칠ricos como los gr치ficos.

游눹 Requisitos y Pasos de Ejecuci칩n
Para ejecutar esta aplicaci칩n, necesitar치s tener Python 3.10 o una versi칩n superior instalada. Las siguientes librer칤as de Python son obligatorias:

1. Instala las librer칤as:
Abre una terminal o l칤nea de comandos y ejecuta los siguientes comandos:
pip install customtkinter
pip install matplotlib
pip install scipy
pip install numpy

2. Ejecuta la aplicaci칩n:
Una vez que las librer칤as est칠n instaladas, navega hasta la carpeta del proyecto y ejecuta el archivo principal:
python main.py

Capturas de Pantalla de la GUI
A continuaci칩n, se muestran las interfaces principales del programa.

Men칰 de Generadores de N칰meros:
(Aqu칤 deber칤as pegar una imagen de tu men칰 principal, donde se pueden seleccionar los algoritmos como Cuadrados Medios, etc.)

Resultados de un Algoritmo de Generaci칩n:
(Aqu칤 deber칤as pegar una imagen de la pantalla que muestra la tabla de resultados de un algoritmo, con los botones de prueba y exportar).

Prueba de Varianza:
(Aqu칤 deber칤as pegar una imagen de la interfaz de la Prueba de Varianza, mostrando los campos de entrada y los resultados).

Gr치fico de Histograma:
(Aqu칤 deber칤as pegar una imagen del histograma que se genera en la Prueba de Uniformidad).

Bit치cora de Avances por Clase
Clase 1: Se cre칩 la estructura b치sica del proyecto con la interfaz principal. Se implement칩 el Algoritmo de Cuadrados Medios para la generaci칩n de n칰meros pseudoaleatorios.

Clase 2: Se a침adieron los Algoritmos de Productos Medios y Multiplicador Constante. Se implement칩 la Prueba de Medias para validar la calidad de la media.

Clase 3: Se incorporaron las pruebas de calidad restantes: Prueba de Varianza y Prueba de Uniformidad (Chi-cuadrada). Se a침adieron los gr치ficos correspondientes a cada prueba para una mejor visualizaci칩n.

Clase 4: Se refactoriz칩 el c칩digo para separar la l칩gica de negocio (logica.py) de la interfaz de usuario (main.py). Se a침adi칩 un bot칩n para Exportar resultados a un archivo de texto (.txt) en cada una de las pantallas de resultados.